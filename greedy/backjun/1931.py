# 문제
# 한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다.
# 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자.
# 단, 회의는 한번 시작하면 중간에 중단될 수 없으며 한 회의가 끝나는 것과 동시에 다음 회의가 시작될 수 있다. 회의의 시작시간과 끝나는 시간이 같을 수도 있다.
# 이 경우에는 시작하자마자 끝나는 것으로 생각하면 된다.
#
# 입력
# 첫째 줄에 회의의 수 N(1 ≤ N ≤ 100,000)이 주어진다. 둘째 줄부터 N+1 줄까지 각 회의의 정보가 주어지는데 이것은 공백을 사이에 두고 회의의 시작시간과 끝나는 시간이 주어진다.
# 시작 시간과 끝나는 시간은 231-1보다 작거나 같은 자연수 또는 0이다.
#
# 출력
# 첫째 줄에 최대 사용할 수 있는 회의의 최대 개수를 출력한다.


N = int(input())
array = []

for _ in range(N):
    start, end = list(map(int, input().split()))
    diff = end - start
    array.append([start, end, diff])

array = sorted(array, key=lambda x: (x[1], x[0], x[2]))  # 끝나는 시점과 시작하는 시점, 짧은 길이를 가진 순으로 정렬
count = 1  # 시작을 포함하기에 1로 시작
temp_end = array[0][1]  # 시작하는 끝점

for i in range(1, len(array)):  # 시작 다음부터 시작하여 끝까지
    if temp_end > array[i][0]:  # 다음 값의 start값이 지금의 end값보다 작다면(범위에 포함된다) pass
        pass
    else:
        temp_end = array[i][1]  # 지금의 end값과 같거나 크다면 포함
        count += 1

print(count)
